groups:
# LONGHORN
- name: longhorn
  rules:
  - alert: LonghornVolumeActualSpaceUsedWarning
    annotations:
      description: The actual space used by Longhorn volume {{$labels.volume}} on {{$labels.node}} is at {{$value}}% capacity for
        more than 5 minutes.
      summary: The actual used space of Longhorn volume is over 90% of the capacity.
    expr: (longhorn_volume_actual_size_bytes / longhorn_volume_capacity_bytes) * 100 > 90
    for: 5m
    labels:
      issue: The actual used space of Longhorn volume {{$labels.volume}} on {{$labels.node}} is high.
      severity: warning
  - alert: LonghornVolumeStatusCritical
    annotations:
      description: Longhorn volume {{$labels.volume}} on {{$labels.node}} is Fault for
        more than 2 minutes.
      summary: Longhorn volume {{$labels.volume}} is Fault
    expr: longhorn_volume_robustness == 3
    for: 5m
    labels:
      issue: Longhorn volume {{$labels.volume}} is Fault.
      severity: critical
  - alert: LonghornVolumeStatusWarning
    annotations:
      description: Longhorn volume {{$labels.volume}} on {{$labels.node}} is Degraded for
        more than 5 minutes.
      summary: Longhorn volume {{$labels.volume}} is Degraded
    expr: longhorn_volume_robustness == 2
    for: 5m
    labels:
      issue: Longhorn volume {{$labels.volume}} is Degraded.
      severity: warning
  - alert: LonghornNodeStorageWarning
    annotations:
      description: The used storage of node {{$labels.node}} is at {{$value}}% capacity for
        more than 5 minutes.
      summary:  The used storage of node is over 70% of the capacity.
    expr: (longhorn_node_storage_usage_bytes / longhorn_node_storage_capacity_bytes) * 100 > 70
    for: 5m
    labels:
      issue: The used storage of node {{$labels.node}} is high.
      severity: warning
  - alert: LonghornDiskStorageWarning
    annotations:
      description: The used storage of disk {{$labels.disk}} on node {{$labels.node}} is at {{$value}}% capacity for
        more than 5 minutes.
      summary:  The used storage of disk is over 70% of the capacity.
    expr: (longhorn_disk_usage_bytes / longhorn_disk_capacity_bytes) * 100 > 70
    for: 5m
    labels:
      issue: The used storage of disk {{$labels.disk}} on node {{$labels.node}} is high.
      severity: warning
  - alert: LonghornNodeDown
    annotations:
      description: There are {{$value}} Longhorn nodes which have been offline for more than 5 minutes.
      summary: Longhorn nodes is offline
    expr: longhorn_node_total - (count(longhorn_node_status{condition="ready"}==1) OR on() vector(0))
    for: 5m
    labels:
      issue: There are {{$value}} Longhorn nodes are offline
      severity: critical
  - alert: LonghornIntanceManagerCPUUsageWarning
    annotations:
      description: Longhorn instance manager {{$labels.instance_manager}} on {{$labels.node}} has CPU Usage / CPU request is {{$value}}% for
        more than 5 minutes.
      summary: Longhorn instance manager {{$labels.instance_manager}} on {{$labels.node}} has CPU Usage / CPU request is over 300%.
    expr: (longhorn_instance_manager_cpu_usage_millicpu/longhorn_instance_manager_cpu_requests_millicpu) * 100 > 300
    for: 5m
    labels:
      issue: Longhorn instance manager {{$labels.instance_manager}} on {{$labels.node}} consumes 3 times the CPU request.
      severity: warning
  - alert: LonghornNodeCPUUsageWarning
    annotations:
      description: Longhorn node {{$labels.node}} has CPU Usage / CPU capacity is {{$value}}% for
        more than 5 minutes.
      summary: Longhorn node {{$labels.node}} experiences high CPU pressure for more than 5m.
    expr: (longhorn_node_cpu_usage_millicpu / longhorn_node_cpu_capacity_millicpu) * 100 > 90
    for: 5m
    labels:
      issue: Longhorn node {{$labels.node}} experiences high CPU pressure.
      severity: warning

# CERT-MANAGER
- name: cert-manager
  rules:
  - alert: CertManagerCertExpirySoon
    annotations:
      description: The domain that this cert covers will be unavailable after {{ $value
        | humanizeDuration }}. Clients using endpoints that this cert protects will start
        to fail in {{ $value | humanizeDuration }}.
      summary: The cert `{{ $labels.name }}` is {{ $value | humanizeDuration }} from expiry,
        it should have renewed over a week ago.
    expr: |
      avg by (exported_namespace, namespace, name) (
        certmanager_certificate_expiration_timestamp_seconds - time()
      ) < (21 * 24 * 3600) # 21 days in seconds
    for: 1h
    labels:
      severity: warning
  - alert: CertManagerCertNotReady
    annotations:
      description: This certificate has not been ready to serve traffic for at least 10m.
        If the cert is being renewed or there is another valid cert, the ingress controller
        _may_ be able to serve that instead.
      summary: The cert `{{ $labels.name }}` is not ready to serve traffic.
    expr: |
      max by (name, exported_namespace, namespace, condition) (
        certmanager_certificate_ready_status{condition!="True"} == 1
      )
    for: 10m
    labels:
      severity: critical
  - alert: CertManagerCertExpiryMetricMissing
    annotations:
      description: We are blind as to whether or not we can alert on certificates expiring.
        It could also be the case that there have not had any Certificate CRDs created.
      summary: The metric used to observe cert-manager cert expiry is missing.
    expr: absent(certmanager_certificate_expiration_timestamp_seconds)
    for: 10m
    labels:
      severity: info
  - alert: CertManagerHittingRateLimits
    annotations:
      description: Depending on the rate limit, cert-manager may be unable to generate
        certificates for up to a week.
      summary: Cert manager hitting LetsEncrypt rate limits.
    expr: |
      sum by (host) (
        rate(certmanager_http_acme_client_request_count{status="429"}[5m])
      ) > 0
    for: 5m
    labels:
      severity: critical

# JAEGER
- name: jaeger
  rules:
  - alert: JaegerAgentUDPPacketsBeingDropped
    annotations:
      message: |
        {{ $labels.job }} {{ $labels.instance }} is dropping {{ printf "%.2f" $value }} UDP packets per second.
    expr: rate(jaeger_agent_thrift_udp_server_packets_dropped_total[1m]) > 1
    for: 15m
    labels:
      severity: warning
  - alert: JaegerAgentHTTPServerErrs
    annotations:
      message: |
        {{ $labels.job }} {{ $labels.instance }} is experiencing {{ printf "%.2f" $value }}% HTTP errors.
    expr: 100 * sum(rate(jaeger_agent_http_server_errors_total[1m])) by (instance,
      job, namespace) / sum(rate(jaeger_agent_http_server_total[1m])) by (instance,
      job, namespace)> 1
    for: 15m
    labels:
      severity: warning
  - alert: JaegerClientSpansDropped
    annotations:
      message: |
        service {{ $labels.job }} {{ $labels.instance }} is dropping {{ printf "%.2f" $value }}% spans.
    expr: 100 * sum(rate(jaeger_reporter_spans{result=~"dropped|err"}[1m])) by (instance,
      job, namespace) / sum(rate(jaeger_reporter_spans[1m])) by (instance, job, namespace)>
      1
    for: 15m
    labels:
      severity: warning
  - alert: JaegerAgentSpansDropped
    annotations:
      message: |
        agent {{ $labels.job }} {{ $labels.instance }} is dropping {{ printf "%.2f" $value }}% spans.
    expr: 100 * sum(rate(jaeger_agent_reporter_batches_failures_total[1m])) by (instance,
      job, namespace) / sum(rate(jaeger_agent_reporter_batches_submitted_total[1m]))
      by (instance, job, namespace)> 1
    for: 15m
    labels:
      severity: warning
  - alert: JaegerCollectorQueueNotDraining
    annotations:
      message: |
        collector {{ $labels.job }} {{ $labels.instance }} is not able to drain the queue.
    expr: avg_over_time(jaeger_collector_queue_length[10m]) > 1000
    for: 15m
    labels:
      severity: warning
  - alert: JaegerCollectorDroppingSpans
    annotations:
      message: |
        collector {{ $labels.job }} {{ $labels.instance }} is dropping {{ printf "%.2f" $value }}% spans.
    expr: 100 * sum(rate(jaeger_collector_spans_dropped_total[1m])) by (instance,
      job, namespace) / sum(rate(jaeger_collector_spans_received_total[1m])) by (instance,
      job, namespace)> 1
    for: 15m
    labels:
      severity: warning
  - alert: JaegerSamplingUpdateFailing
    annotations:
      message: |
        {{ $labels.job }} {{ $labels.instance }} is failing {{ printf "%.2f" $value }}% in updating sampling policies.
    expr: 100 * sum(rate(jaeger_sampler_queries{result="err"}[1m])) by (instance,
      job, namespace) / sum(rate(jaeger_sampler_queries[1m])) by (instance, job, namespace)>
      1
    for: 15m
    labels:
      severity: warning
  - alert: JaegerCollectorPersistenceSlow
    annotations:
      message: |
        {{ $labels.job }} {{ $labels.instance }} is slow at persisting spans.
    expr: histogram_quantile(0.99, sum by (le) (rate(jaeger_collector_save_latency_bucket[1m])))
      > 0.5
    for: 15m
    labels:
      severity: warning
  - alert: JaegerThrottlingUpdateFailing
    annotations:
      message: |
        {{ $labels.job }} {{ $labels.instance }} is failing {{ printf "%.2f" $value }}% in updating throttling policies.
    expr: 100 * sum(rate(jaeger_throttler_updates{result="err"}[1m])) by (instance,
      job, namespace) / sum(rate(jaeger_throttler_updates[1m])) by (instance, job,
      namespace)> 1
    for: 15m
    labels:
      severity: warning
  - alert: JaegerQueryReqsFailing
    annotations:
      message: |
        {{ $labels.job }} {{ $labels.instance }} is seeing {{ printf "%.2f" $value }}% query errors on {{ $labels.operation }}.
    expr: 100 * sum(rate(jaeger_query_requests_total{result="err"}[1m])) by (instance,
      job, namespace) / sum(rate(jaeger_query_requests_total[1m])) by (instance, job,
      namespace)> 1
    for: 15m
    labels:
      severity: warning

# KUBERNETES
- name: kubernetes
  rules:
  - alert: KubePodCrashLooping
    annotations:
      description: Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container
        }}) is restarting {{ printf "%.2f" $value }} times / 10 minutes.
      summary: Pod is crash looping.
    expr: |
      rate(kube_pod_container_status_restarts_total{app="kube-state-metrics"}[10m]) * 60 * 5 > 0
    for: 15m
    labels:
      severity: warning
  - alert: KubePodNotReady
    annotations:
      description: Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready
        state for longer than 15 minutes.
      summary: Pod has been in a non-ready state for more than 15 minutes.
    expr: |
      sum by (namespace, pod) (
        max by(namespace, pod) (
          kube_pod_status_phase{app="kube-state-metrics", phase=~"Pending|Unknown"}
        ) * on(namespace, pod) group_left(owner_kind) topk by(namespace, pod) (
          1, max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!="Job"})
        )
      ) > 0
    for: 15m
    labels:
      severity: warning
  - alert: KubeDeploymentGenerationMismatch
    annotations:
      description: Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment
        }} does not match, this indicates that the Deployment has failed but has not
        been rolled back.
      summary: Deployment generation mismatch due to possible roll-back
    expr: |
      kube_deployment_status_observed_generation{app="kube-state-metrics"}
        !=
      kube_deployment_metadata_generation{app="kube-state-metrics"}
    for: 15m
    labels:
      severity: warning
  - alert: KubeDeploymentReplicasMismatch
    annotations:
      description: Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has
        not matched the expected number of replicas for longer than 15 minutes.
      summary: Deployment has not matched the expected number of replicas.
    expr: |
      (
        kube_deployment_spec_replicas{app="kube-state-metrics"}
          !=
        kube_deployment_status_replicas_available{app="kube-state-metrics"}
      ) and (
        changes(kube_deployment_status_replicas_updated{app="kube-state-metrics"}[5m])
          ==
        0
      )
    for: 15m
    labels:
      severity: warning
  - alert: KubeStatefulSetReplicasMismatch
    annotations:
      description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has
        not matched the expected number of replicas for longer than 15 minutes.
      summary: Deployment has not matched the expected number of replicas.
    expr: |
      (
        kube_statefulset_status_replicas_ready{app="kube-state-metrics"}
          !=
        kube_statefulset_status_replicas{app="kube-state-metrics"}
      ) and (
        changes(kube_statefulset_status_replicas_updated{app="kube-state-metrics"}[5m])
          ==
        0
      )
    for: 15m
    labels:
      severity: warning
  - alert: KubeStatefulSetGenerationMismatch
    annotations:
      description: StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset
        }} does not match, this indicates that the StatefulSet has failed but has
        not been rolled back.
      summary: StatefulSet generation mismatch due to possible roll-back
    expr: |
      kube_statefulset_status_observed_generation{app="kube-state-metrics"}
        !=
      kube_statefulset_metadata_generation{app="kube-state-metrics"}
    for: 15m
    labels:
      severity: warning
  - alert: KubeStatefulSetUpdateNotRolledOut
    annotations:
      description: StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update
        has not been rolled out.
      summary: StatefulSet update has not been rolled out.
    expr: |
      (
        max without (revision) (
          kube_statefulset_status_current_revision{app="kube-state-metrics"}
            unless
          kube_statefulset_status_update_revision{app="kube-state-metrics"}
        )
          *
        (
          kube_statefulset_replicas{app="kube-state-metrics"}
            !=
          kube_statefulset_status_replicas_updated{app="kube-state-metrics"}
        )
      )  and (
        changes(kube_statefulset_status_replicas_updated{app="kube-state-metrics"}[5m])
          ==
        0
      )
    for: 15m
    labels:
      severity: warning
  - alert: KubeDaemonSetRolloutStuck
    annotations:
      description: DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not
        finished or progressed for at least 15 minutes.
      summary: DaemonSet rollout is stuck.
    expr: |
      (
        (
          kube_daemonset_status_current_number_scheduled{app="kube-state-metrics"}
           !=
          kube_daemonset_status_desired_number_scheduled{app="kube-state-metrics"}
        ) or (
          kube_daemonset_status_number_misscheduled{app="kube-state-metrics"}
           !=
          0
        ) or (
          kube_daemonset_updated_number_scheduled{app="kube-state-metrics"}
           !=
          kube_daemonset_status_desired_number_scheduled{app="kube-state-metrics"}
        ) or (
          kube_daemonset_status_number_available{app="kube-state-metrics"}
           !=
          kube_daemonset_status_desired_number_scheduled{app="kube-state-metrics"}
        )
      ) and (
        changes(kube_daemonset_updated_number_scheduled{app="kube-state-metrics"}[5m])
          ==
        0
      )
    for: 15m
    labels:
      severity: warning
  - alert: KubeContainerWaiting
    annotations:
      description: Pod {{ $labels.namespace }}/{{ $labels.pod }} container {{ $labels.container}}
        has been in waiting state for longer than 1 hour.
      summary: Pod container waiting longer than 1 hour
    expr: |
      sum by (namespace, pod, container) (kube_pod_container_status_waiting_reason{app="kube-state-metrics"}) > 0
    for: 1h
    labels:
      severity: warning
  - alert: KubeDaemonSetNotScheduled
    annotations:
      description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset
      }} are not scheduled.'
      summary: DaemonSet pods are not scheduled.
    expr: |
      kube_daemonset_status_desired_number_scheduled{app="kube-state-metrics"}
        -
      kube_daemonset_status_current_number_scheduled{app="kube-state-metrics"} > 0
    for: 10m
    labels:
      severity: warning
  - alert: KubeDaemonSetMisScheduled
    annotations:
      description: '{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset
      }} are running where they are not supposed to run.'
      summary: DaemonSet pods are misscheduled.
    expr: |
      kube_daemonset_status_number_misscheduled{app="kube-state-metrics"} > 0
    for: 15m
    labels:
      severity: warning
  - alert: KubeJobCompletion
    annotations:
      description: Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more
        than 12 hours to complete.
      summary: Job did not complete in time
    expr: |
      kube_job_spec_completions{app="kube-state-metrics"} - kube_job_status_succeeded{app="kube-state-metrics"}  > 0
    for: 12h
    labels:
      severity: warning
  - alert: KubeJobFailed
    annotations:
      description: Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete.
        Removing failed job after investigation should clear this alert.
      summary: Job failed to complete.
    expr: |
      kube_job_failed{app="kube-state-metrics"}  > 0
    for: 15m
    labels:
      severity: warning
  - alert: KubeHpaReplicasMismatch
    annotations:
      description: HPA {{ $labels.namespace }}/{{ $labels.hpa }} has not matched the
        desired number of replicas for longer than 15 minutes.
      summary: HPA has not matched descired number of replicas.
    expr: |
      (kube_hpa_status_desired_replicas{app="kube-state-metrics"}
        !=
      kube_hpa_status_current_replicas{app="kube-state-metrics"})
        and
      (kube_hpa_status_current_replicas{app="kube-state-metrics"}
        >
      kube_hpa_spec_min_replicas{app="kube-state-metrics"})
        and
      (kube_hpa_status_current_replicas{app="kube-state-metrics"}
        <
      kube_hpa_spec_max_replicas{app="kube-state-metrics"})
        and
      changes(kube_hpa_status_current_replicas[15m]) == 0
    for: 15m
    labels:
      severity: warning
  - alert: KubeHpaMaxedOut
    annotations:
      description: HPA {{ $labels.namespace }}/{{ $labels.hpa }} has been running
        at max replicas for longer than 15 minutes.
      summary: HPA is running at max replicas
    expr: |
      kube_hpa_status_current_replicas{app="kube-state-metrics"}
        ==
      kube_hpa_spec_max_replicas{app="kube-state-metrics"}
    for: 15m
    labels:
      severity: warning
  - alert: KubeCPUOvercommit
    annotations:
      description: Cluster has overcommitted CPU resource requests for Pods and cannot
        tolerate node failure.
      summary: Cluster has overcommitted CPU resource requests.
    expr: |
      sum(namespace:kube_pod_container_resource_requests_cpu_cores:sum{})
        /
      sum(kube_node_status_allocatable_cpu_cores)
        >
      (count(kube_node_status_allocatable_cpu_cores)-1) / count(kube_node_status_allocatable_cpu_cores)
    for: 5m
    labels:
      severity: warning
  - alert: KubeMemoryOvercommit
    annotations:
      description: Cluster has overcommitted memory resource requests for Pods and
        cannot tolerate node failure.
      summary: Cluster has overcommitted memory resource requests.
    expr: |
      sum(namespace:kube_pod_container_resource_requests_memory_bytes:sum{})
        /
      sum(kube_node_status_allocatable_memory_bytes)
        >
      (count(kube_node_status_allocatable_memory_bytes)-1)
        /
      count(kube_node_status_allocatable_memory_bytes)
    for: 5m
    labels:
      severity: warning
  - alert: KubeCPUQuotaOvercommit
    annotations:
      description: Cluster has overcommitted CPU resource requests for Namespaces.
      summary: Cluster has overcommitted CPU resource requests.
    expr: |
      sum(kube_resourcequota{app="kube-state-metrics", type="hard", resource="cpu"})
        /
      sum(kube_node_status_allocatable_cpu_cores)
        > 1.5
    for: 5m
    labels:
      severity: warning
  - alert: KubeMemoryQuotaOvercommit
    annotations:
      description: Cluster has overcommitted memory resource requests for Namespaces.
      summary: Cluster has overcommitted memory resource requests.
    expr: |
      sum(kube_resourcequota{app="kube-state-metrics", type="hard", resource="memory"})
        /
      sum(kube_node_status_allocatable_memory_bytes{app="kube-state-metrics"})
        > 1.5
    for: 5m
    labels:
      severity: warning
  - alert: KubeQuotaAlmostFull
    annotations:
      description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
        }} of its {{ $labels.resource }} quota.
      summary: Namespace quota is going to be full.
    expr: |
      kube_resourcequota{app="kube-state-metrics", type="used"}
        / ignoring(instance, job, type)
      (kube_resourcequota{app="kube-state-metrics", type="hard"} > 0)
        > 0.9 < 1
    for: 15m
    labels:
      severity: info
  - alert: KubeQuotaFullyUsed
    annotations:
      description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
        }} of its {{ $labels.resource }} quota.
      summary: Namespace quota is fully used.
    expr: |
      kube_resourcequota{app="kube-state-metrics", type="used"}
        / ignoring(instance, job, type)
      (kube_resourcequota{app="kube-state-metrics", type="hard"} > 0)
        == 1
    for: 15m
    labels:
      severity: info
  - alert: KubeQuotaExceeded
    annotations:
      description: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
        }} of its {{ $labels.resource }} quota.
      summary: Namespace quota has exceeded the limits.
    expr: |
      kube_resourcequota{app="kube-state-metrics", type="used"}
        / ignoring(instance, job, type)
      (kube_resourcequota{app="kube-state-metrics", type="hard"} > 0)
        > 1
    for: 15m
    labels:
      severity: warning
  - alert: CPUThrottlingHigh
    annotations:
      description: '{{ $value | humanizePercentage }} throttling of CPU in namespace
      {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod
      }}.'
      summary: Processes experience elevated CPU throttling.
    expr: |
      sum(increase(container_cpu_cfs_throttled_periods_total{container!="", }[5m])) by (container, pod, namespace)
        /
      sum(increase(container_cpu_cfs_periods_total{}[5m])) by (container, pod, namespace)
        > ( 25 / 100 )
    for: 15m
    labels:
      severity: info
  - alert: KubePersistentVolumeFillingUp
    annotations:
      description: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim
        }} in Namespace {{ $labels.namespace }} is only {{ $value | humanizePercentage
        }} free.
      summary: PersistentVolume is filling up.
    expr: |
      kubelet_volume_stats_available_bytes{app="kubelet"}
        /
      kubelet_volume_stats_capacity_bytes{app="kubelet"}
        < 0.03
    for: 1m
    labels:
      severity: critical
  - alert: KubePersistentVolumeFillingUp
    annotations:
      description: Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim
        }} in Namespace {{ $labels.namespace }} is expected to fill up within four
        days. Currently {{ $value | humanizePercentage }} is available.
      summary: PersistentVolume is filling up.
    expr: |
      (
        kubelet_volume_stats_available_bytes{app="kubelet"}
          /
        kubelet_volume_stats_capacity_bytes{app="kubelet"}
      ) < 0.15
      and
      predict_linear(kubelet_volume_stats_available_bytes{app="kubelet"}[6h], 4 * 24 * 3600) < 0
    for: 1h
    labels:
      severity: warning
  - alert: KubePersistentVolumeErrors
    annotations:
      description: The persistent volume {{ $labels.persistentvolume }} has status
        {{ $labels.phase }}.
      summary: PersistentVolume is having issues with provisioning.
    expr: |
      kube_persistentvolume_status_phase{phase=~"Failed|Pending",app="kube-state-metrics"} > 0
    for: 5m
    labels:
      severity: critical
  - alert: KubeVersionMismatch
    annotations:
      description: There are {{ $value }} different semantic versions of Kubernetes
        components running.
      summary: Different semantic versions of Kubernetes components running.
    expr: |
      count(count by (gitVersion) (label_replace(kubernetes_build_info{job!~"kube-dns|coredns"},"gitVersion","$1","gitVersion","(v[0-9]*.[0-9]*).*"))) > 1
    for: 15m
    labels:
      severity: warning
  - alert: KubeClientErrors
    annotations:
      description: Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance
        }}' is experiencing {{ $value | humanizePercentage }} errors.'
      summary: Kubernetes API server client is experiencing errors.
    expr: |
      (sum(rate(rest_client_requests_total{code=~"5.."}[5m])) by (instance, job)
        /
      sum(rate(rest_client_requests_total[5m])) by (instance, job))
      > 0.01
    for: 15m
    labels:
      severity: warning
  - alert: KubeAPIErrorBudgetBurn
    annotations:
      description: The API server is burning too much error budget.
      summary: The API server is burning too much error budget.
    expr: |
      sum(apiserver_request:burnrate1h) > (14.40 * 0.01000)
      and
      sum(apiserver_request:burnrate5m) > (14.40 * 0.01000)
    for: 2m
    labels:
      long: 1h
      severity: critical
      short: 5m
  - alert: KubeAPIErrorBudgetBurn
    annotations:
      description: The API server is burning too much error budget.
      summary: The API server is burning too much error budget.
    expr: |
      sum(apiserver_request:burnrate6h) > (6.00 * 0.01000)
      and
      sum(apiserver_request:burnrate30m) > (6.00 * 0.01000)
    for: 15m
    labels:
      long: 6h
      severity: critical
      short: 30m
  - alert: KubeAPIErrorBudgetBurn
    annotations:
      description: The API server is burning too much error budget.
      summary: The API server is burning too much error budget.
    expr: |
      sum(apiserver_request:burnrate1d) > (3.00 * 0.01000)
      and
      sum(apiserver_request:burnrate2h) > (3.00 * 0.01000)
    for: 1h
    labels:
      long: 1d
      severity: warning
      short: 2h
  - alert: KubeAPIErrorBudgetBurn
    annotations:
      description: The API server is burning too much error budget.
      summary: The API server is burning too much error budget.
    expr: |
      sum(apiserver_request:burnrate3d) > (1.00 * 0.01000)
      and
      sum(apiserver_request:burnrate6h) > (1.00 * 0.01000)
    for: 3h
    labels:
      long: 3d
      severity: warning
      short: 6h
  - alert: KubeClientCertificateExpiration
    annotations:
      description: A client certificate used to authenticate to the apiserver is expiring
        in less than 7.0 days.
      summary: Client certificate is about to expire.
    expr: |
      apiserver_client_certificate_expiration_seconds_count{job="kubernetes-apiservers"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="kubernetes-apiservers"}[5m]))) < 604800
    labels:
      severity: warning
  - alert: KubeClientCertificateExpiration
    annotations:
      description: A client certificate used to authenticate to the apiserver is expiring
        in less than 24.0 hours.
      summary: Client certificate is about to expire.
    expr: |
      apiserver_client_certificate_expiration_seconds_count{job="kubernetes-apiservers"} > 0 and on(job) histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="kubernetes-apiservers"}[5m]))) < 86400
    labels:
      severity: critical
  - alert: AggregatedAPIErrors
    annotations:
      description: An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has
        reported errors. It has appeared unavailable {{ $value | humanize }} times
        averaged over the past 10m.
      summary: An aggregated API has reported errors.
    expr: |
      sum by(name, namespace)(increase(aggregator_unavailable_apiservice_count[10m])) > 4
    labels:
      severity: warning
  - alert: AggregatedAPIDown
    annotations:
      description: An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has
        been only {{ $value | humanize }}% available over the last 10m.
      summary: An aggregated API is down.
    expr: |
      (1 - max by(name, namespace)(avg_over_time(aggregator_unavailable_apiservice[10m]))) * 100 < 85
    for: 5m
    labels:
      severity: warning
  - alert: KubeAPIDown
    annotations:
      description: KubeAPI has disappeared from Prometheus target discovery.
      summary: Target disappeared from Prometheus target discovery.
    expr: |
      absent(up{job="kubernetes-apiservers"} == 1)
    for: 15m
    labels:
      severity: critical
  - alert: KubeAPITerminatedRequests
    annotations:
      description: The apiserver has terminated {{ $value | humanizePercentage }}
        of its incoming requests.
      summary: The apiserver has terminated {{ $value | humanizePercentage }} of its
        incoming requests.
    expr: |
      sum(rate(apiserver_request_terminations_total{job="kubernetes-apiservers"}[10m]))  / (  sum(rate(apiserver_request_total{job="kubernetes-apiservers"}[10m])) + sum(rate(apiserver_request_terminations_total{job="kubernetes-apiservers"}[10m])) ) > 0.20
    for: 5m
    labels:
      severity: warning
  - alert: KubeNodeNotReady
    annotations:
      description: '{{ $labels.node }} has been unready for more than 15 minutes.'
      summary: Node is not ready.
    expr: |
      kube_node_status_condition{app="kube-state-metrics",condition="Ready",status="true"} == 0
    for: 15m
    labels:
      severity: warning
  - alert: KubeNodeUnreachable
    annotations:
      description: '{{ $labels.node }} is unreachable and some workloads may be rescheduled.'
      summary: Node is unreachable.
    expr: |
      (kube_node_spec_taint{app="kube-state-metrics",key="node.kubernetes.io/unreachable",effect="NoSchedule"} unless ignoring(key,value) kube_node_spec_taint{app="kube-state-metrics",key=~"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn"}) == 1
    for: 15m
    labels:
      severity: warning
  - alert: KubeletTooManyPods
    annotations:
      description: Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage
        }} of its Pod capacity.
      summary: Kubelet is running at capacity.
    expr: |
      count by(node) (
        (kube_pod_status_phase{app="kube-state-metrics",phase="Running"} == 1) * on(instance,pod,namespace,cluster) group_left(node) topk by(instance,pod,namespace,cluster) (1, kube_pod_info{app="kube-state-metrics"})
      )
      /
      max by(node) (
        kube_node_status_capacity_pods{app="kube-state-metrics"} != 1
      ) > 0.95
    for: 15m
    labels:
      severity: warning
  - alert: KubeNodeReadinessFlapping
    annotations:
      description: The readiness status of node {{ $labels.node }} has changed {{
        $value }} times in the last 15 minutes.
      summary: Node readiness status is flapping.
    expr: |
      sum(changes(kube_node_status_condition{status="true",condition="Ready"}[15m])) by (node) > 2
    for: 15m
    labels:
      severity: warning
  - alert: KubeletPlegDurationHigh
    annotations:
      description: The Kubelet Pod Lifecycle Event Generator has a 99th percentile
        duration of {{ $value }} seconds on node {{ $labels.node }}.
      summary: Kubelet Pod Lifecycle Event Generator is taking too long to relist.
    expr: |
      node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile="0.99"} >= 10
    for: 5m
    labels:
      severity: warning
  - alert: KubeletPodStartUpLatencyHigh
    annotations:
      description: Kubelet Pod startup 99th percentile latency is {{ $value }} seconds
        on node {{ $labels.node }}.
      summary: Kubelet Pod startup latency is too high.
    expr: |
      histogram_quantile(0.99, sum(rate(kubelet_pod_worker_duration_seconds_bucket{app="kubelet"}[5m])) by (instance, le)) * on(instance) group_left(node) kubelet_node_name{app="kubelet"} > 60
    for: 15m
    labels:
      severity: warning
  - alert: KubeletClientCertificateExpiration
    annotations:
      description: Client certificate for Kubelet on node {{ $labels.node }} expires
        in {{ $value | humanizeDuration }}.
      summary: Kubelet client certificate is about to expire.
    expr: |
      kubelet_certificate_manager_client_ttl_seconds < 604800
    labels:
      severity: warning
  - alert: KubeletClientCertificateExpiration
    annotations:
      description: Client certificate for Kubelet on node {{ $labels.node }} expires
        in {{ $value | humanizeDuration }}.
      summary: Kubelet client certificate is about to expire.
    expr: |
      kubelet_certificate_manager_client_ttl_seconds < 86400
    labels:
      severity: critical
  - alert: KubeletServerCertificateExpiration
    annotations:
      description: Server certificate for Kubelet on node {{ $labels.node }} expires
        in {{ $value | humanizeDuration }}.
      summary: Kubelet server certificate is about to expire.
    expr: |
      kubelet_certificate_manager_server_ttl_seconds < 604800
    labels:
      severity: warning
  - alert: KubeletServerCertificateExpiration
    annotations:
      description: Server certificate for Kubelet on node {{ $labels.node }} expires
        in {{ $value | humanizeDuration }}.
      summary: Kubelet server certificate is about to expire.
    expr: |
      kubelet_certificate_manager_server_ttl_seconds < 86400
    labels:
      severity: critical
  - alert: KubeletClientCertificateRenewalErrors
    annotations:
      description: Kubelet on node {{ $labels.node }} has failed to renew its client
        certificate ({{ $value | humanize }} errors in the last 5 minutes).
      summary: Kubelet has failed to renew its client certificate.
    expr: |
      increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0
    for: 15m
    labels:
      severity: warning
  - alert: KubeletServerCertificateRenewalErrors
    annotations:
      description: Kubelet on node {{ $labels.node }} has failed to renew its server
        certificate ({{ $value | humanize }} errors in the last 5 minutes).
      summary: Kubelet has failed to renew its server certificate.
    expr: |
      increase(kubelet_server_expiration_renew_errors[5m]) > 0
    for: 15m
    labels:
      severity: warning
